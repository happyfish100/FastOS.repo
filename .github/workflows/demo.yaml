name: Demo Action
on: 
  push:
    tags:        
      - DEMO_**
jobs:
  version-set:
    runs-on: ubuntu-18.04
    env: 
      lpkgdemo_dir: vazmin/lpkg-demo
      lpkgdemo_repo: lpkg-demo
    steps:
      - name: Set up run env
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          sudo apt-get update
          sudo apt-get install debhelper devscripts -y
      - name: Checkout FastOS.repo
        uses: actions/checkout@v3
      - name: Gen substvars and Environment variable
        run: |
          . version
          envsubst < mkdeb/substvars.in >> substvars
          envsubst < version >> /tmp/version.out
          sed -i 's/export //g' /tmp/version.out
          echo "$(cat /tmp/version.out)" >> $GITHUB_ENV
      - name: Parse git tag to ENV
        run: |
          echo "parse $GITHUB_REF_NAME"
          for x in $(IFS='_';echo $GITHUB_REF_NAME); do echo "$x=Y" >> $GITHUB_ENV; done
      - name: Checkout lpkg-demo
        uses: actions/checkout@v3
        with: 
          repository: ${{env.lpkgdemo_repo}}
          token: ${{secrets.GITHUB_TOKEN}}
          path: ${{env.lpkgdemo_dir}}
          persist-credentials: false
          fetch-depth: 0 
      - name: Update lpkg-demo substars & changelog
        if: ${{ env.LPKG == 'Y' && env.C == 'Y'}}
        run: |
          ./aio/changlelog_substars.sh ${{env.lpkgdemo_dir}} ${{env.lpkgdemo_revision}}
      - name: Push lpkg-demo changes
        uses: vazmin/github-push-action@master
        if: ${{ env.LPKG == 'Y' && env.P == 'Y'}}
        with:
          github_token: ${{ secrets.GH_PAT }}
          branch: main
          directory: ${{env.lpkgdemo_dir}}
          repository: ${{env.lpkgdemo_repo}}
      - name: Build lpkg-demo
        run: |
          cd ${{env.lpkgdemo_dir}}
          dpkg-buildpackage -b --no-sign
      - name: Upload artifact 
        uses: actions/upload-artifact@v3
        with:
          name: lpkg-demo
          path: |
            *.deb
            *.ddeb
  deploy-to-repo:
    runs-on: ubuntu-18.04
    needs: [version-set]
    steps:
      - name: Checkout FastOS.repo
        uses: actions/checkout@v3
      - name: Gen substvars and Environment variable
        run: |
          . version
          envsubst < mkdeb/substvars.in >> substvars
          envsubst < version >> /tmp/version.out
          sed -i 's/export //g' /tmp/version.out
          echo "$(cat /tmp/version.out)" >> $GITHUB_ENV
      - name: Parse git tag to ENV
        run: |
          echo "parse $GITHUB_REF_NAME"
          for x in $(IFS='_';echo $GITHUB_REF_NAME); do echo "$x=Y" >> $GITHUB_ENV; done
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: lpkg-demo
          path: deb
      - name: Display structure of downloaded files
        run: |
          ls -R deb
          zip --junk-paths lpkg-demo deb/*
      - name: Install SSH key
        if: ${{ env.LPKG == 'Y' && env.D == 'Y' }}
        uses: vazmin/ssh-key-action@v2
        with:
          key: ${{ secrets.REPO_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Add to Repo
        if: ${{ env.LPKG == 'Y' && env.D == 'Y' }}
        run: |
          EXP=/tmp/reprepro.exp
          scp mkdeb/reprepro.exp ${{secrets.REPO_SSH_USER}}@${{secrets.REPO_SSH_HOST}}:${EXP}
          REMOTE_DEB_DIR=/tmp/gh-actions-$(echo $RANDOM | md5sum | head -c 10)
          rsync -avz deb/*.deb ${{secrets.REPO_SSH_USER}}@${{secrets.REPO_SSH_HOST}}:$REMOTE_DEB_DIR/
          ssh ${{secrets.REPO_SSH_USER}}@${{secrets.REPO_SSH_HOST}} \
           "SIGNING_PASSWORD=${{secrets.REPO_SIGNING_PASSWORD}} ${EXP} -- \
           -b /usr/html/aptrepo/fastos includedeb stable ${REMOTE_DEB_DIR}/*.deb"
      - name: Create Release
        id: create_release
        if: ${{ env.LPKG == 'Y' && env.R == 'Y' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./lpkg-demo/*.*deb; do
            assets+=("-a" "$asset")
          done
          assets+=("a" "./lpkg-demo.zip")
          hub release create "${assets[@]}" -m "$GITHUB_REF_NAME $(cat /tmp/version.out)" "$GITHUB_REF_NAME"
          
      # - name: Create Release
      #   id: create_release
      #   if: ${{ env.LPKG == 'Y' && env.R == 'Y' }}
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   if: ${{ env.LPKG == 'Y' && env.R == 'Y' }}
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}  
      #     asset_path: ./lpkg-demo.zip
      #     asset_name: lpkg-demo.zip
      #     asset_content_type: application/zip

